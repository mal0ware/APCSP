The expected user of my program is anyone who would like to use the filter to change the contrast of their image. The user provides the image, and the code produces the image with the filter applied.
A student created function is sillywilly(pixel). This function uses a for loop to iterate over the three values of red, green, and blue of the pixel which was the input of the function.
It takes the redgreen and blue values and modifies each value based on certain criteria one by one. It then appends each value to a list called RGB. The function returns the RGB list. sillywilly() is basically the actual filter itself, on the pixel level. it takes the pixel, changes it, and returns the new pixel. The code relies on sillywilly() to achieve its goal.
RGB is a list being used in the program. It stores the 3 values that represent Red Green and Blue. The context is it being used in sillywilly(), to represent the result of each RGB value going through the filter. It is expected to hold 3 values.
This RGB list manages the complexity by not having to deal with several more variables. Instead of naming a variable for red, green and blue, it's possible to change all the values in the same way and append the results to the RGB list. This makes it so RGB list is basically the same format as the pixel it took as an input. It is easier to manage a list, than to manage 3 different variables.
apply_filter() is a function in my code and the first iteration statement would be the loop: "for x in range(image.get_width()):" which was designed to iterate over every pixel in a row, of an image. The number of times the iteration will execute depends on the width of the image, which may vary. The loop could be modified to loop infinitely by switching the for loop to a while true loop. This is because the for loop will only run for the width of the image, which is not infinite. A while true loop with no breaks will run forever.
A function in my program is sillywilly(). Removing the "return RGB" will result in an error because it means that the function will not return anything. This is bad, because we need the new pixel to be able to apply the pixel for the final image. Without the new pixel, no new image will be able to be created.